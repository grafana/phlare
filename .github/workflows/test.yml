name: ci
on:
  push:
    branches:
      - main
      - r[0-9]+ # Trigger builds after a push to weekly branches
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        go-version: [ 1.18.5 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Restore cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: ${{ secrets.GO_MOD_SSH_PRIVATE_KEY }}
    - name: Enfore SSH for github.com
      run: git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    - name: Go Mod
      run: make check/go/mod
      if: matrix.os == 'ubuntu-latest'
    - name: Format
      run: make fmt check/unstaged-changes
      if: matrix.os == 'ubuntu-latest'
    - name: Test
      run: make go/test

  lint:
    strategy:
      matrix:
        go-version: [ 1.18.5 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: ${{ secrets.GO_MOD_SSH_PRIVATE_KEY }}
    - name: Enfore SSH for github.com
      run: git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    - name: Run linter
      run: make lint
    - name: Check helm manifests
      run: make helm/check

  build-image:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.GO_MOD_SSH_PRIVATE_KEY }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build image
        run: make docker-image/fire/build "BUILDX_ARGS=--cache-from=type=gha --cache-to=type=gha"

  build-push-and-deploy-image:
    if: github.event_name == 'push' && github.repository == 'grafana/fire'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.GO_MOD_SSH_PRIVATE_KEY }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: us.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
      - name: Build & push multi-arch image
        id: build-push
        run: |
          make docker-image/fire/push "BUILDX_ARGS=--cache-from=type=gha --cache-to=type=gha"
      - name: Deploy to fire-dev-001
        run: |
          git config --global url."https://grafanabot:${{ secrets.GRAFANABOT_PAT }}@github.com/grafana/deployment_tools".insteadOf "https://github.com/grafana/deployment_tools"
          make docker-image/fire/deploy-dev-001
        env:
          GITHUB_TOKEN: ${{ secrets.GRAFANABOT_PAT }}
