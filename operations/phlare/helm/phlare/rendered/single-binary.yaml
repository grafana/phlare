---
# Source: phlare/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: phlare-dev
  labels:
    helm.sh/chart: phlare-0.1.0
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: phlare/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: phlare-dev-config
  labels:
    helm.sh/chart: phlare-0.1.0
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    scrape_configs:
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_phlare_grafana_com_scrape
      - action: replace
        regex: (.+?)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_phlare_grafana_com_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: drop
        regex: Pending|Succeeded|Failed|Completed
        source_labels:
        - __meta_kubernetes_pod_phase
      scrape_interval: 15s
---
# Source: phlare/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: default-phlare-dev
  labels:
    helm.sh/chart: phlare-0.1.0
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
---
# Source: phlare/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-phlare-dev
  labels:
    helm.sh/chart: phlare-0.1.0
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-phlare-dev
subjects:
  - kind: ServiceAccount
    name: phlare-dev
    namespace: default
---
# Source: phlare/templates/memberlist-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: phlare-dev-memberlist
  labels:
    helm.sh/chart: phlare-0.1.0
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: memberlist
      port: 7946
      protocol: TCP
      targetPort: 7946
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    # TODO: Ensure only services that offer memberlist register
    # phlare.grafana.com/memberlist: "true"
---
# Source: phlare/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: phlare-dev
  labels:
    helm.sh/chart: phlare-0.1.0
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "all"
spec:
  type: ClusterIP
  ports:
    - port: 4100
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/component: "all"
---
# Source: phlare/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: phlare-dev-headless
  labels:
    helm.sh/chart: phlare-0.1.0
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "all"
spec:
  type: ClusterIP
  ports:
    - port: 4100
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/component: "all"
---
# Source: phlare/templates/deployments-statefulsets.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: phlare-dev
  labels:
    helm.sh/chart: phlare-0.1.0
    app.kubernetes.io/name: phlare
    app.kubernetes.io/instance: phlare-dev
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "all"
spec:
  serviceName: phlare-dev-headless
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: phlare
      app.kubernetes.io/instance: phlare-dev
      app.kubernetes.io/component: "all"
  template:
    metadata:
      annotations:
        checksum/config: 277489e0f364872f2b0179c330220e8df857e2ef34773edb29c200cd8771f56b
        phlare.grafana.com/port: "4100"
        phlare.grafana.com/scrape: "true"
      labels:
        app.kubernetes.io/name: phlare
        app.kubernetes.io/instance: phlare-dev
        app.kubernetes.io/component: "all"
        name: "phlare"
    spec:
      serviceAccountName: phlare-dev
      securityContext:
        fsGroup: 10001
      containers:
        - name: "phlare"
          securityContext: {}
          image: "grafana/phlare:0.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=all"
            - "-memberlist.cluster-label=default-phlare-dev"
            - "-memberlist.join=phlare-dev-memberlist.default.svc.cluster.local."
            - "-config.file=/etc/phlare/config.yaml"
            - "-log.level=debug"
          ports:
            - name: http
              containerPort: 4100
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          volumeMounts:
            - name: config
              mountPath: /etc/phlare/config.yaml
              subPath: config.yaml
            - name: data
              mountPath: /data
          resources: {}
      volumes:
        - name: config
          configMap:
            name: phlare-dev-config
        - name: data
          emptyDir: {}
